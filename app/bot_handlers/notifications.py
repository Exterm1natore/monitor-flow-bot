from typing import List
from bot.bot import Bot
from .constants import NotificationTypes
from app.core import bot_extensions
from app import db


def send_notification_to_subscribers(bot: Bot, notification_type: NotificationTypes, text: str,
                                     parse_mode: str = None):
    """
    –û—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω–æ–≥–æ —Ç–∏–ø–∞ –≤—Å–µ–º –ø–æ–¥–ø–∏—Å—á–∏–∫–∞–º.

    :param bot: VKTeams bot.
    :param notification_type: –¢–∏–ø —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è.
    :param text: –¢–µ–∫—Å—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è.
    :param parse_mode: –¢–∏–ø —Ä–∞–∑–±–æ—Ä–∞ —Ç–µ–∫—Å—Ç–∞.
    """
    with db.get_db_session() as session:
        notify_type = db.crud.find_notification_type(session, notification_type.value)

        if notify_type is None:
            raise ValueError(f"Notification type '{notification_type.value}' does not exist in the database.")

        subscribers: List[db.NotificationSubscriber] = notify_type.subscribers.all()

        # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ email —á–∞—Ç–æ–≤, –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏
        emails = [
            subscriber.chat.email
            for subscriber in subscribers
        ]

    # –ï—Å–ª–∏ –µ—Å—Ç—å —Ö–æ—Ç—è-–±—ã –æ–¥–∏–Ω –ø–æ–¥–ø–∏—Å—á–∏–∫ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
    if emails:
        notify_text = f"üîî –ù–æ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ.\n\n{text}"
        bot_extensions.send_text_to_chats(bot, emails, notify_text, parse_mode=parse_mode)
